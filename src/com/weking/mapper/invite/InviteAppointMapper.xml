<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.weking.mapper.invite.InviteAppointMapper" >
  <resultMap id="BaseResultMap" type="com.weking.model.invite.InviteAppoint" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="other_id" property="otherId" jdbcType="INTEGER" />
    <result column="frozen_id" property="frozenId" jdbcType="INTEGER" />
    <result column="other_frozen_id" property="otherFrozenId" jdbcType="INTEGER" />
    <result column="invite_id" property="inviteId" jdbcType="INTEGER" />
    <result column="sincerity" property="sincerity" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="add_time" property="addTime" jdbcType="BIGINT" />
    <result column="account" property="account" jdbcType="VARCHAR"/>
    <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
    <result column="signiture" property="signiture" jdbcType="VARCHAR"/>
    <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, invite_id, sincerity, state, add_time,other_id,frozen_id,other_frozen_id,detail
  </sql>

  <select id="findByUserIdAndInviteId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from wk_invite_appoint
    where user_id = #{userId} AND invite_id = #{inviteId} ORDER BY id desc limit 1
  </select>

  <select id="findInfoById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from wk_invite_appoint
    where id = #{id} limit 1
  </select>

  <select id="findNotConfirmIdByInviteId" resultType="int" parameterType="java.lang.Integer" >
    select id from wk_invite_appoint
    where invite_id = #{inviteId} AND state = 2
  </select>

  <select id="findInfoByInviteId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select <include refid="Base_Column_List" /> from wk_invite_appoint
    where invite_id = #{inviteId} AND (state = 1 OR state = 2) ORDER BY id DESC limit 1
  </select>

  <select id="findByInviteIdAndOtherFrozenId" resultType="int" parameterType="java.lang.Integer" >
    select id from wk_invite_appoint
    where invite_id = #{inviteId} AND other_frozen_id = #{otherFrozenId}
  </select>

  <select id="selectListByInviteId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select i.state, i.add_time,u.nickname,u.account,u.pichead_url
    from wk_invite_appoint i INNER JOIN wk_user_info u ON i.user_id = u.id
    where invite_id = #{inviteId} ORDER BY id DESC limit #{index},#{count}
  </select>

  <select id="selectAppointmentList" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select a.id,invite_id,sincerity,detail,u.nickname,u.account,u.pichead_url as avatar,signiture
    from wk_invite_appoint a INNER JOIN wk_user_info u ON a.other_id = u.id WHERE a.user_id = #{userId}
    <if test="state != null" >
      AND a.state = #{state}
    </if>
    ORDER BY a.id DESC limit #{index},#{count}
  </select>

  <select id="findAppointmentInfo" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select a.id,invite_id,sincerity,detail,u.nickname,u.account,u.pichead_url as avatar,signiture,state
    from wk_invite_appoint a INNER JOIN wk_user_info u ON a.other_id = u.id WHERE a.id = #{id} limit 1
  </select>

  <select id="selectAppointmentUserList" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select a.id,invite_id,sincerity,detail,u.nickname,u.account,u.pichead_url as avatar,signiture,a.state
    from wk_invite_appoint a INNER JOIN wk_user_info u ON a.user_id = u.id WHERE a.invite_id = #{inviteId}
    ORDER BY a.id DESC limit #{index},#{count}
  </select>

  <select id="selectAllNotConfirmAppointment" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id,add_time from wk_invite_appoint WHERE state = 2
  </select>


  <delete id="deleteAppointInfo" parameterType="java.lang.Integer" >
    delete from wk_invite_appoint
    where id = #{id,jdbcType=INTEGER} AND user_id = #{userId}
  </delete>

  <insert id="insert" parameterType="com.weking.model.invite.InviteAppoint" >
    insert into wk_invite_appoint (user_id, invite_id,other_id,frozen_id,
      sincerity,detail, add_time
      )
    values (#{userId,jdbcType=INTEGER}, #{inviteId,jdbcType=INTEGER},#{otherId,jdbcType=INTEGER},#{frozenId,jdbcType=INTEGER},
      #{sincerity,jdbcType=INTEGER},#{detail,jdbcType=VARCHAR}, #{addTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.weking.model.invite.InviteAppoint" >
    insert into wk_invite_appoint
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="inviteId != null" >
        invite_id,
      </if>
      <if test="sincerity != null" >
        sincerity,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="inviteId != null" >
        #{inviteId,jdbcType=INTEGER},
      </if>
      <if test="sincerity != null" >
        #{sincerity,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.weking.model.invite.InviteAppoint" >
    update wk_invite_appoint
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="inviteId != null" >
        invite_id = #{inviteId,jdbcType=INTEGER},
      </if>
      <if test="sincerity != null" >
        sincerity = #{sincerity,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateStateById" >
    update wk_invite_appoint
    set state = #{state,jdbcType=TINYINT}
    <if test="frozenId != null" >
      ,other_frozen_id = #{frozenId}
    </if>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>