<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.weking.mapper.task.TaskCountsLogMapper" >
  <resultMap id="BaseResultMap" type="com.weking.model.task.TaskCountsLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="task_id" property="taskId" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="add_time" property="addTime" jdbcType="BIGINT" />
    <result column="task_state" property="taskState" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, task_id, count, add_time, task_state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from wk_task_counts_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from wk_task_counts_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.weking.model.task.TaskCountsLog" >
    insert into wk_task_counts_log (id, user_id, task_id, 
      count, add_time, task_state
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, 
      #{count,jdbcType=INTEGER}, #{addTime,jdbcType=BIGINT}, #{taskState,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.weking.model.task.TaskCountsLog" >
    insert into wk_task_counts_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="taskState != null" >
        task_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=BIGINT},
      </if>
      <if test="taskState != null" >
        #{taskState,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.weking.model.task.TaskCountsLog" >
    update wk_task_counts_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=BIGINT},
      </if>
      <if test="taskState != null" >
        task_state = #{taskState,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.weking.model.task.TaskCountsLog" >
    update wk_task_counts_log
    set user_id = #{userId,jdbcType=INTEGER},
      task_id = #{taskId,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=BIGINT},
      task_state = #{taskState,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectTaskCountsLogByIdAndTime" resultMap="BaseResultMap" >
    select *
    from wk_task_counts_log
    where task_id = #{taskId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER} and add_time > #{time,jdbcType=BIGINT} limit 0,1
  </select>

  <update id="increaseCountsByPrimaryKey" >
    update wk_task_counts_log
    set `count` = `count` + #{count,jdbcType=INTEGER},add_time = #{time,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateTaskStateByKey" >
    update wk_task_counts_log
    set task_state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


</mapper>