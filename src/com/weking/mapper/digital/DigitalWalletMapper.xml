<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.weking.mapper.digital.DigitalWalletMapper">
    <resultMap id="BaseResultMap" type="com.weking.model.digital.DigitalWallet">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="symbol" property="symbol" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="in_amount" property="inAmount" jdbcType="DECIMAL"/>
        <result column="curr_amount" property="currAmount" jdbcType="DECIMAL"/>
        <result column="out_amount" property="outAmount" jdbcType="DECIMAL"/>
        <result column="all_withdraw_amount" property="allWithdrawAmount" jdbcType="DECIMAL"/>
        <result column="withdraw_amount" property="withdrawAmount" jdbcType="DECIMAL"/>

        <result column="token_name" property="token_name" jdbcType="VARCHAR"/>
        <result column="token_logo" property="token_logo" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="DOUBLE"/>
        <result column="rate" property="rate" jdbcType="DOUBLE"/>
    </resultMap>
  <sql id="Base_Column_List">
    id, user_id, symbol, address, in_amount, curr_amount, out_amount,all_withdraw_amount,withdraw_amount
  </sql>

  <sql id="Base_Column_List2">
    A.id,A.user_id,A.symbol,A.address,A.in_amount,A.curr_amount,A.out_amount,A.all_withdraw_amount,A.withdraw_amount,B.token_name,B.token_logo,B.price
  </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from wk_digital_wallet
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from wk_digital_wallet
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.weking.model.digital.DigitalWallet">
    insert into wk_digital_wallet (id, user_id, symbol, 
      address, in_amount, curr_amount, 
      out_amount,all_withdraw_amount,withdraw_amount)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{symbol,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{inAmount,jdbcType=DECIMAL}, #{currAmount,jdbcType=DECIMAL}, 
      #{outAmount,jdbcType=DECIMAL}, #{allWithdrawAmount,jdbcType=DECIMAL}, #{withdrawAmount,jdbcType=DECIMAL})
  </insert>
    <insert id="insertSelective" parameterType="com.weking.model.digital.DigitalWallet">
        insert into wk_digital_wallet
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="symbol != null">
                symbol,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="inAmount != null">
                in_amount,
            </if>
            <if test="currAmount != null">
                curr_amount,
            </if>
            <if test="outAmount != null">
                out_amount,
            </if>
            <if test="allWithdrawAmount != null">
                all_withdraw_amount,
            </if>
            <if test="withdrawAmount != null">
                withdraw_amount,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="symbol != null">
                #{symbol,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="inAmount != null">
                #{inAmount,jdbcType=DECIMAL},
            </if>
            <if test="currAmount != null">
                #{currAmount,jdbcType=DECIMAL},
            </if>
            <if test="outAmount != null">
                #{outAmount,jdbcType=DECIMAL},
            </if>
            <if test="allWithdrawAmount != null">
                #{allWithdrawAmount,jdbcType=DECIMAL},
            </if>
            <if test="withdrawAmount != null">
                #{withdrawAmount,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.weking.model.digital.DigitalWallet">
        update wk_digital_wallet
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="symbol != null">
                symbol = #{symbol,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="inAmount != null">
                in_amount = #{inAmount,jdbcType=DECIMAL},
            </if>
            <if test="currAmount != null">
                curr_amount = #{currAmount,jdbcType=DECIMAL},
            </if>
            <if test="outAmount != null">
                out_amount = #{outAmount,jdbcType=DECIMAL},
            </if>

            <if test="allWithdrawAmount != null">
                all_withdraw_amount= #{allWithdrawAmount,jdbcType=DECIMAL},
            </if>
            <if test="withdrawAmount != null">
                withdraw_amount= #{withdrawAmount,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

  <update id="updateByPrimaryKey" parameterType="com.weking.model.digital.DigitalWallet">
    update wk_digital_wallet
    set user_id = #{userId,jdbcType=BIGINT},
      symbol = #{symbol,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      in_amount = #{inAmount,jdbcType=DECIMAL},
      curr_amount = #{currAmount,jdbcType=DECIMAL},
      all_withdraw_amount= #{allWithdrawAmount,jdbcType=DECIMAL},
      withdraw_amount= #{withdrawAmount,jdbcType=DECIMAL},
      out_amount = #{outAmount,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="getSenderLeftDiamondbyid" resultType="int" parameterType="java.lang.Integer">
        select
        curr_amount
        from wk_digital_wallet
        where user_id = #{userId} and symbol='SCA'
    </select>

    <select id="getUserWithdrawAmount" resultType="int" parameterType="java.lang.Integer">
        select
        withdraw_amount
        from wk_digital_wallet
        where user_id = #{userId} and symbol='SCA'
    </select>


    <select id="batchSelectUsersDiamond" resultMap="BaseResultMap">
        SELECT user_id,curr_amount,withdraw_amount
        FROM wk_digital_wallet
        where  symbol='SCA' AND  user_id in
        <foreach collection="map" index="key" item="value" separator="," open="(" close=")">
            #{value}
        </foreach>
    </select>

    <update id="increaseDiamondByUserId">
        update wk_digital_wallet
        set  curr_amount = curr_amount + #{currAmount}
        where user_id = #{userId}
    </update>

    <update id="increaseWithDrawAmountByUserId">
        update wk_digital_wallet
        set  withdraw_amount = withdraw_amount + #{withdrawAmount}
        where user_id = #{userId}
    </update>


    <update id="increaseTicketByUserid">
        update wk_digital_wallet
        set  curr_amount = curr_amount + #{currAmount}
        where user_id = #{userid}
    </update>

    <update id="increaseTicketWithDrawAmountByUserid">
        update wk_digital_wallet
        set  withdraw_amount = withdraw_amount + #{withdrawAmount}
        where user_id = #{userid}
    </update>

    <update id="deductAllDiamondByUserId">
        update wk_digital_wallet
        set  curr_amount = curr_amount - #{currAmount}
        where user_id = #{userid} AND curr_amount >= #{currAmount} AND symbol='SCA'
    </update>


    <update id="deductAllDiamondWithDrawAmountByUserId">
        update wk_digital_wallet
        set  withdraw_amount = withdraw_amount - #{withdrawAmount}
        where user_id = #{userid} AND withdraw_amount >= #{withdrawAmount} AND symbol='SCA'
    </update>

    <update id="batchIncreaseDiamond">
        update wk_digital_wallet
        <trim prefix="set" suffixOverrides=",">

            <trim prefix="curr_amount = case" suffix="ELSE 0 end,">
                <foreach collection="map" item="value" index="key">
                    <if test="value != null">
                        when user_id = #{key}
                        <if test="value &lt; 0">
                            AND curr_amount  >= -#{value}
                        </if>
                        then curr_amount + #{value}
                    </if>
                </foreach>
            </trim>

        </trim>
        where user_id in
        <foreach collection="map" index="key" item="value" separator="," open="(" close=")">
            #{key}
        </foreach>
    </update>


    <update id="batchIncreaseDiamondWithdrawAmount">
        update wk_digital_wallet
        <trim prefix="set" suffixOverrides=",">

            <trim prefix="withdraw_amount = case" suffix="ELSE 0 end,">
                <foreach collection="map" item="value" index="key">
                    <if test="value != null">
                        when user_id = #{key}
                        <if test="value &lt; 0">
                            AND withdraw_amount  >= -#{value}
                        </if>
                        then withdraw_amount + #{value}
                    </if>
                </foreach>
            </trim>

        </trim>
        where user_id in
        <foreach collection="map" index="key" item="value" separator="," open="(" close=")">
            #{key}
        </foreach>
    </update>




  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
    SELECT <include refid="Base_Column_List2"/>
    FROM wk_digital_wallet A
    LEFT JOIN wk_digital_token B on A.symbol = B.symbol
    where A.user_id = #{user_id,jdbcType=BIGINT}
  </select>

  <select id="selectByUserIdSymbol" resultMap="BaseResultMap">
    SELECT A.id,A.user_id,A.symbol,A.address,A.in_amount,A.curr_amount,A.out_amount,A.all_withdraw_amount,A.withdraw_amount,B.token_name,B.token_logo,B.price
    FROM wk_digital_wallet A
    LEFT JOIN wk_digital_token B on A.symbol = B.symbol
    where A.user_id = #{user_id} and A.symbol=#{symbol}
  </select>

    <select id="selectByAddress" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from wk_digital_wallet
        where address = #{address} and symbol=#{symbol}
    </select>

  <select id="selectByKey" resultMap="BaseResultMap">
    SELECT A.id,A.user_id,A.symbol,A.address,A.in_amount,A.curr_amount,A.out_amount,A.all_withdraw_amount,A.withdraw_amount,B.token_name,B.token_logo,B.price
    FROM wk_digital_wallet A
    LEFT JOIN wk_digital_token B on A.symbol = B.symbol
    where A.id = #{id}
  </select>

</mapper>